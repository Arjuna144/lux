##  Copyright (c) Eduardo Julian. All rights reserved.
##  This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
##  If a copy of the MPL was not distributed with this file,
##  You can obtain one at http://mozilla.org/MPL/2.0/.

(;import lux
         (lux (control (monoid #as m)
                       functor
                       monad
                       comonad
                       bounded
                       eq
                       hash
                       (ord #as O)
                       (show #as S)
                       number)
              (data bool
                    char
                    (either #as e)
                    id
                    io
                    list
                    maybe
                    (number (int #refer (#only))
                            (real #refer (#only)))
                    (text #refer (#only <>) #open ("text:" Text/Monoid))
                    (writer #refer (#only))
                    (tuple #refer (#only))
                    )
              (codata (stream #as s)
                      (lazy #refer (#only))
                      (function #refer (#only))
                      (reader #as r)
                      (state #refer (#only)))
              (host jvm
                    io)
              (meta ast
                    lux
                    macro
                    syntax
                    type)
              math
              ))

(program args
  (case args
    (\ (@list name))
    (write-line (<> "Hello, #{name}!"))

    _
    (do IO/Monad
      [_ (write "Please, tell me your name: ")
       name' read-line
       #let [name (? "???" name')]]
      (write-line (<> "Hello, #{name}!")))
    ))
