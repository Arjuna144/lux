(use "./util" as util)

(def (print-enum enum)
  (case enum
    #Nil
    (println "")
    
    (#Cons [idx x] enum')
    (do (print "[") (print idx) (print ":") (print x) (print "]") (print " ")
        (print-enum enum'))))

#((def monadic-dup
  (util/exec [foo get-state
              bar get-state
              baz (util/return 1000)]
    (util/return (+ (+ foo bar) baz)))))#

(def (print-map list-map)
  (do (print "{")
    (print (fold concat "" (interpose " " (map show-kv list-map))))
    (println "}")))

## Program
(def (main args)
  (println "Hello, world!"))
