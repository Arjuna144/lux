##   Copyright (c) Eduardo Julian. All rights reserved.
##   The use and distribution terms for this software are covered by the
##   Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)
##   which can be found in the file epl-v10.html at the root of this distribution.
##   By using this software in any fashion, you are agreeing to be bound by
##   the terms of this license.
##   You must not remove this notice, or any other, from this software.

(;import lux
         (lux/control (monoid #as m))
         (lux/data (eq #as E)
                   (ord #as O)
                   (bounded #as B)))

## Signatures
(defsig #export (Number n)
  (do-template [<name>]
    [(: (-> n n n) <name>)]
    [+] [-] [*] [/] [%])

  (: (-> Int n)
     from-int)

  (do-template [<name>]
    [(: (-> n n) <name>)]
    [negate] [signum] [abs])
  )

## [Structures]
## Number
(do-template [<name> <type> <+> <-> <*> </> <%> <=> <<> <from> <0> <1> <-1>]
  [(defstruct #export <name> (Number <type>)
     (def + <+>)
     (def - <->)
     (def * <*>)
     (def / </>)
     (def % <%>)
     (def (from-int x)
       (<from> x))
     (def (negate x)
       (<*> <-1> x))
     (def (abs x)
       (if (<<> x <0>)
         (<*> <-1> x)
         x))
     (def (signum x)
       (cond (<=> x <0>) <0>
             (<<> x <0>) <-1>
             ## else
             <1>))
     )]

  [ Int/Number  Int i+ i- i* i/ i% i= i<       id 0   1   -1]
  [Real/Number Real r+ r- r* r/ r% r= r< _jvm_l2d 0.0 1.0 -1.0])

## Eq
(defstruct #export Int/Eq (E;Eq Int)
  (def E;= i=))

(defstruct #export Real/Eq (E;Eq Real)
  (def E;= r=))

## Ord
(def #export Int/Ord (O;Ord Int)
  (O;ord$ Int/Eq   i<  i>))

(def #export Real/Ord (O;Ord Real)
  (O;ord$ Real/Eq r< r>))

## Monoid
(do-template [<name> <type> <unit> <++>]
  [(defstruct #export <name> (m;Monoid <type>)
     (def m;unit <unit>)
     (def m;++ <++>))]

  [ IntAdd/Monoid  Int 0   i+]
  [ IntMul/Monoid  Int 1   i*]
  [RealAdd/Monoid Real 0.0 r+]
  [RealMul/Monoid Real 1.0 r*]
  [ IntMax/Monoid  Int (::  B;Int/Bounded B;bottom)  (O;max  Int/Ord)]
  [ IntMin/Monoid  Int (::  B;Int/Bounded B;top)     (O;min  Int/Ord)]
  [RealMax/Monoid Real (:: B;Real/Bounded B;bottom)  (O;max Real/Ord)]
  [RealMin/Monoid Real (:: B;Real/Bounded B;top)     (O;min Real/Ord)]
  )
